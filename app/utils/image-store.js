'use strict';
const cloudinary = require('cloudinary');
const fs = require('fs');
const util = require('util');
const writeFile = util.promisify(fs.writeFile);
const Image = require("../models/image");
const Poi = require("../models/poi.js");

const ImageStore = {
  configure: function() {
    const credentials = {
      cloud_name: process.env.name,
      api_key: process.env.key,
      api_secret: process.env.secret
    };
    cloudinary.config(credentials);
  },

  getAllImages: async function(poi) {
    const result = await cloudinary.v2.api.resources({poi: poi});
    return result.resources;
  },

  uploadImage: async function(imagefile, poi) {
    await writeFile('./public/temp.img', imagefile);
    await cloudinary.uploader.upload('./public/temp.img', async function (image) {
      //const image = console.log();
      console.log("** File Upload");
     // if (err) { console.warn(err); }
      console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
      console.log("* " + image.public_id);
      console.log("* " + image.url);
      const url = image.url;
    //  const poi = await Poi.findById(request.payload._id);
      const newImage = new Image({
        url: url,
        poi: poi,
      });
      await newImage.save();
      // ("pizza", err, image);
    });
  },

  deleteImage: async function(id) {
    await cloudinary.v2.uploader.destroy(id, {});
  },
};
module.exports = ImageStore;